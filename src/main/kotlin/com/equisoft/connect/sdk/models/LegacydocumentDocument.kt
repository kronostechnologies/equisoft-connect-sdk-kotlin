/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.equisoft.connect.sdk.models

import com.equisoft.connect.sdk.models.LegacyUser
import com.equisoft.connect.sdk.models.LegacycontactContact
import com.equisoft.connect.sdk.models.LegacydocumentFile

import com.squareup.moshi.Json

/**
 * 
 *
 * @param files Files contained inside the document
 * @param contacts List of linked contacts
 * @param createdBy email of user who created the document
 * @param createdOn date of creation of the document
 * @param modifiedBy email of user who last modified the document
 * @param modifiedOn date of the last modification of the document
 * @param externalKey external key of the document
 * @param dateStart date start of the document
 * @param dateEnd date end of the document
 * @param dateSignature date signature of the document
 * @param writtenBy author of the document
 * @param notes notes of the document
 * @param users users related to the document
 * @param id id of the document
 * @param type type of the document
 * @param subType subtype of the document
 * @param name name of the document
 */

data class LegacydocumentDocument (

    /* Files contained inside the document */
    @Json(name = "files")
    val files: kotlin.collections.List<LegacydocumentFile>? = null,

    /* List of linked contacts */
    @Json(name = "contacts")
    val contacts: kotlin.collections.List<LegacycontactContact>? = null,

    /* email of user who created the document */
    @Json(name = "createdBy")
    val createdBy: kotlin.String? = null,

    /* date of creation of the document */
    @Json(name = "createdOn")
    val createdOn: kotlin.String? = null,

    /* email of user who last modified the document */
    @Json(name = "modifiedBy")
    val modifiedBy: kotlin.String? = null,

    /* date of the last modification of the document */
    @Json(name = "modifiedOn")
    val modifiedOn: kotlin.String? = null,

    /* external key of the document */
    @Json(name = "externalKey")
    val externalKey: kotlin.String? = null,

    /* date start of the document */
    @Json(name = "dateStart")
    val dateStart: kotlin.String? = null,

    /* date end of the document */
    @Json(name = "dateEnd")
    val dateEnd: kotlin.String? = null,

    /* date signature of the document */
    @Json(name = "dateSignature")
    val dateSignature: kotlin.String? = null,

    /* author of the document */
    @Json(name = "writtenBy")
    val writtenBy: kotlin.String? = null,

    /* notes of the document */
    @Json(name = "notes")
    val notes: kotlin.String? = null,

    /* users related to the document */
    @Json(name = "users")
    val users: kotlin.collections.List<LegacyUser>? = null,

    /* id of the document */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* type of the document */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* subtype of the document */
    @Json(name = "subType")
    val subType: kotlin.String? = null,

    /* name of the document */
    @Json(name = "name")
    val name: kotlin.String? = null

)

