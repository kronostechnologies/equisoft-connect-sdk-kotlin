/**
 * Equisoft /connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.equisoft.connect.sdk.models

import com.equisoft.connect.sdk.models.ContactContactAdditionalInformation
import com.equisoft.connect.sdk.models.ContactContactAddress
import com.equisoft.connect.sdk.models.ContactContactEmail
import com.equisoft.connect.sdk.models.ContactContactIdentification
import com.equisoft.connect.sdk.models.ContactContactPhone
import com.equisoft.connect.sdk.models.ContactContactSegmentation
import com.equisoft.connect.sdk.models.ContactContactWebsite
import com.equisoft.connect.sdk.models.ContactsContactCurrentMaritalStatus
import com.equisoft.connect.sdk.models.ContactsContactCurrentOccupation

import com.squareup.moshi.Json

/**
 * 
 *
 * @param id 
 * @param uuid 
 * @param contactType 
 * @param displayName 
 * @param sortName 
 * @param notes 
 * @param notesAdditionalInformation 
 * @param creationDate 
 * @param lastUpdateDate 
 * @param identification 
 * @param additionalInformation 
 * @param currentMaritalStatus 
 * @param currentOccupation 
 * @param segmentation 
 * @param addresses List of contact's addresses
 * @param phones List of contact's phones
 * @param emails List of contact's emails
 * @param websites List of contact's websites
 */

data class ContactsContact (

    @Json(name = "id")
    val id: kotlin.Int,

    @Json(name = "uuid")
    val uuid: kotlin.String,

    @Json(name = "contactType")
    val contactType: kotlin.String,

    @Json(name = "displayName")
    val displayName: kotlin.String? = null,

    @Json(name = "sortName")
    val sortName: kotlin.String? = null,

    @Json(name = "notes")
    val notes: kotlin.String? = null,

    @Json(name = "notesAdditionalInformation")
    val notesAdditionalInformation: kotlin.String? = null,

    @Json(name = "creationDate")
    val creationDate: java.time.OffsetDateTime? = null,

    @Json(name = "lastUpdateDate")
    val lastUpdateDate: java.time.OffsetDateTime? = null,

    @Json(name = "identification")
    val identification: ContactContactIdentification? = null,

    @Json(name = "additionalInformation")
    val additionalInformation: ContactContactAdditionalInformation? = null,

    @Json(name = "currentMaritalStatus")
    val currentMaritalStatus: ContactsContactCurrentMaritalStatus? = null,

    @Json(name = "currentOccupation")
    val currentOccupation: ContactsContactCurrentOccupation? = null,

    @Json(name = "segmentation")
    val segmentation: ContactContactSegmentation? = null,

    /* List of contact's addresses */
    @Json(name = "addresses")
    val addresses: kotlin.collections.List<ContactContactAddress>? = null,

    /* List of contact's phones */
    @Json(name = "phones")
    val phones: kotlin.collections.List<ContactContactPhone>? = null,

    /* List of contact's emails */
    @Json(name = "emails")
    val emails: kotlin.collections.List<ContactContactEmail>? = null,

    /* List of contact's websites */
    @Json(name = "websites")
    val websites: kotlin.collections.List<ContactContactWebsite>? = null

)

